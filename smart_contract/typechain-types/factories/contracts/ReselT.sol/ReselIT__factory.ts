/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  ReselIT,
  ReselITInterface,
} from "../../../contracts/ReselT.sol/ReselIT";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "eventAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
    ],
    name: "TicketBought",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "eventAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "seller",
        type: "address",
      },
    ],
    name: "TicketDelisted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "eventAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "seller",
        type: "address",
      },
    ],
    name: "TicketListed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "allListings",
    outputs: [
      {
        internalType: "address",
        name: "eventAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "seller",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "eventAddress",
        type: "address",
      },
    ],
    name: "buyTicketFromEvent",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "eventAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "buyTicketResale",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "eventAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "delistTicket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllListings",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "eventAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "seller",
            type: "address",
          },
        ],
        internalType: "struct ReselIT.ListedTicket[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "eventAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "listTicket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "listings",
    outputs: [
      {
        internalType: "address",
        name: "eventAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "seller",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b50611c858061001f6000396000f3fe60806040526004361061007a5760003560e01c80631d66b15c1161004e5780631d66b15c14610158578063219ae7c014610181578063ae73ccec1461019d578063f489b89a146101c85761007a565b806207df301461007f5780630665efeb146100bf5780630eeaa2ef146100db578063150b7a021461011b575b600080fd5b34801561008b57600080fd5b506100a660048036038101906100a191906113ee565b6101f1565b6040516100b6949392919061144c565b60405180910390f35b6100d960048036038101906100d491906113ee565b61026e565b005b3480156100e757600080fd5b5061010260048036038101906100fd9190611491565b610718565b604051610112949392919061144c565b60405180910390f35b34801561012757600080fd5b50610142600480360381019061013d9190611523565b610798565b60405161014f91906115e6565b60405180910390f35b34801561016457600080fd5b5061017f600480360381019061017a9190611601565b6107ad565b005b61019b60048036038101906101969190611654565b610bec565b005b3480156101a957600080fd5b506101b2610c56565b6040516101bf91906117a3565b60405180910390f35b3480156101d457600080fd5b506101ef60048036038101906101ea91906113ee565b610d75565b005b6001602052816000526040600020602052806000526040600020600091509150508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905084565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000206040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050905060008160400151116103d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103cb90611822565b60405180910390fd5b806040015134101561041b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104129061188e565b60405180910390fd5b60008390508073ffffffffffffffffffffffffffffffffffffffff166342842e0e3033866040518463ffffffff1660e01b815260040161045d939291906118ae565b600060405180830381600087803b15801561047757600080fd5b505af115801561048b573d6000803e3d6000fd5b50505050816060015173ffffffffffffffffffffffffffffffffffffffff166108fc83604001519081150290604051600060405180830381858888f193505050501580156104dd573d6000803e3d6000fd5b50600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000848152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600182016000905560028201600090556003820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055505061059984846110bd565b81604001513411156105fc573373ffffffffffffffffffffffffffffffffffffffff166108fc8360400151346105cf9190611914565b9081150290604051600060405180830381858888f193505050501580156105fa573d6000803e3d6000fd5b505b8073ffffffffffffffffffffffffffffffffffffffff16637526a6856040518163ffffffff1660e01b8152600401602060405180830381865afa158015610647573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066b9190611980565b156106d1578073ffffffffffffffffffffffffffffffffffffffff16632338116b6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156106b857600080fd5b505af11580156106cc573d6000803e3d6000fd5b505050505b7fb64b5d296974d1fc1b4ad9b6b03c4ec640787a4befba5dd07e8ca499555977ef848484604001513360405161070a949392919061144c565b60405180910390a150505050565b6000818154811061072857600080fd5b90600052602060002090600402016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905084565b600063150b7a0260e01b905095945050505050565b60008390503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16636352211e856040518263ffffffff1660e01b815260040161080291906119ad565b602060405180830381865afa15801561081f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084391906119dd565b73ffffffffffffffffffffffffffffffffffffffff1614610899576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089090611a56565b60405180910390fd5b600082116108dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d390611ac2565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166342842e0e3330866040518463ffffffff1660e01b8152600401610919939291906118ae565b600060405180830381600087803b15801561093357600080fd5b505af1158015610947573d6000803e3d6000fd5b50505050600060405180608001604052808673ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018481526020013373ffffffffffffffffffffffffffffffffffffffff16815250908060018154018082558091505060019003906000526020600020906004020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002015560608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505060405180608001604052808573ffffffffffffffffffffffffffffffffffffffff1681526020018481526020018381526020013373ffffffffffffffffffffffffffffffffffffffff16815250600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600085815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002015560608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050507f8eb7f103cc796712c31d344f1e05d5b095b445d2b7ac20e98c7cf75d9fc5a20784848433604051610bde949392919061144c565b60405180910390a150505050565b60008190508073ffffffffffffffffffffffffffffffffffffffff1663edca914c346040518263ffffffff1660e01b81526004016000604051808303818588803b158015610c3957600080fd5b505af1158015610c4d573d6000803e3d6000fd5b50505050505050565b60606000805480602002602001604051908101604052809291908181526020016000905b82821015610d6c57838290600052602060002090600402016040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505081526020019060010190610c7a565b50505050905090565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000206040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505090506000816040015111610edb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ed290611b2e565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff16816060015173ffffffffffffffffffffffffffffffffffffffff1614610f4d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f4490611b9a565b60405180910390fd5b60008390508073ffffffffffffffffffffffffffffffffffffffff166342842e0e3033866040518463ffffffff1660e01b8152600401610f8f939291906118ae565b600060405180830381600087803b158015610fa957600080fd5b505af1158015610fbd573d6000803e3d6000fd5b50505050600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000848152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600182016000905560028201600090556003820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055505061107c84846110bd565b7f870f3946346c8dc6fcff1bf39e4783a1d7af5d3c18aa8046519a9ee23160cd4d8484336040516110af93929190611bba565b60405180910390a150505050565b60005b60008054905081101561134b578273ffffffffffffffffffffffffffffffffffffffff16600082815481106110f8576110f7611bf1565b5b906000526020600020906004020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480156111715750816000828154811061115d5761115c611bf1565b5b906000526020600020906004020160010154145b1561133e576000600160008054905061118a9190611914565b8154811061119b5761119a611bf1565b5b9060005260206000209060040201600082815481106111bd576111bc611bf1565b5b90600052602060002090600402016000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060018201548160010155600282015481600201556003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555090505060008054806112c2576112c1611c20565b5b6001900381819060005260206000209060040201600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600182016000905560028201600090556003820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555050905561134b565b80806001019150506110c0565b505050565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006113858261135a565b9050919050565b6113958161137a565b81146113a057600080fd5b50565b6000813590506113b28161138c565b92915050565b6000819050919050565b6113cb816113b8565b81146113d657600080fd5b50565b6000813590506113e8816113c2565b92915050565b6000806040838503121561140557611404611350565b5b6000611413858286016113a3565b9250506020611424858286016113d9565b9150509250929050565b6114378161137a565b82525050565b611446816113b8565b82525050565b6000608082019050611461600083018761142e565b61146e602083018661143d565b61147b604083018561143d565b611488606083018461142e565b95945050505050565b6000602082840312156114a7576114a6611350565b5b60006114b5848285016113d9565b91505092915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126114e3576114e26114be565b5b8235905067ffffffffffffffff811115611500576114ff6114c3565b5b60208301915083600182028301111561151c5761151b6114c8565b5b9250929050565b60008060008060006080868803121561153f5761153e611350565b5b600061154d888289016113a3565b955050602061155e888289016113a3565b945050604061156f888289016113d9565b935050606086013567ffffffffffffffff8111156115905761158f611355565b5b61159c888289016114cd565b92509250509295509295909350565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6115e0816115ab565b82525050565b60006020820190506115fb60008301846115d7565b92915050565b60008060006060848603121561161a57611619611350565b5b6000611628868287016113a3565b9350506020611639868287016113d9565b925050604061164a868287016113d9565b9150509250925092565b60006020828403121561166a57611669611350565b5b6000611678848285016113a3565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6116b68161137a565b82525050565b6116c5816113b8565b82525050565b6080820160008201516116e160008501826116ad565b5060208201516116f460208501826116bc565b50604082015161170760408501826116bc565b50606082015161171a60608501826116ad565b50505050565b600061172c83836116cb565b60808301905092915050565b6000602082019050919050565b600061175082611681565b61175a818561168c565b93506117658361169d565b8060005b8381101561179657815161177d8882611720565b975061178883611738565b925050600181019050611769565b5085935050505092915050565b600060208201905081810360008301526117bd8184611745565b905092915050565b600082825260208201905092915050565b7f4e6f7420666f722073616c650000000000000000000000000000000000000000600082015250565b600061180c600c836117c5565b9150611817826117d6565b602082019050919050565b6000602082019050818103600083015261183b816117ff565b9050919050565b7f496e73756666696369656e742045544800000000000000000000000000000000600082015250565b60006118786010836117c5565b915061188382611842565b602082019050919050565b600060208201905081810360008301526118a78161186b565b9050919050565b60006060820190506118c3600083018661142e565b6118d0602083018561142e565b6118dd604083018461143d565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061191f826113b8565b915061192a836113b8565b9250828203905081811115611942576119416118e5565b5b92915050565b60008115159050919050565b61195d81611948565b811461196857600080fd5b50565b60008151905061197a81611954565b92915050565b60006020828403121561199657611995611350565b5b60006119a48482850161196b565b91505092915050565b60006020820190506119c2600083018461143d565b92915050565b6000815190506119d78161138c565b92915050565b6000602082840312156119f3576119f2611350565b5b6000611a01848285016119c8565b91505092915050565b7f4e6f74207469636b6574206f776e657200000000000000000000000000000000600082015250565b6000611a406010836117c5565b9150611a4b82611a0a565b602082019050919050565b60006020820190508181036000830152611a6f81611a33565b9050919050565b7f5072696365206d757374206265203e2030000000000000000000000000000000600082015250565b6000611aac6011836117c5565b9150611ab782611a76565b602082019050919050565b60006020820190508181036000830152611adb81611a9f565b9050919050565b7f5469636b6574206e6f74206c6973746564000000000000000000000000000000600082015250565b6000611b186011836117c5565b9150611b2382611ae2565b602082019050919050565b60006020820190508181036000830152611b4781611b0b565b9050919050565b7f4e6f742073656c6c657200000000000000000000000000000000000000000000600082015250565b6000611b84600a836117c5565b9150611b8f82611b4e565b602082019050919050565b60006020820190508181036000830152611bb381611b77565b9050919050565b6000606082019050611bcf600083018661142e565b611bdc602083018561143d565b611be9604083018461142e565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea26469706673582212205ea89b7a9ef09dda34506cd4704753193ac6fca2f9ab91a6b218efd04fa95f5264736f6c634300081c0033";

type ReselITConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ReselITConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ReselIT__factory extends ContractFactory {
  constructor(...args: ReselITConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ReselIT & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ReselIT__factory {
    return super.connect(runner) as ReselIT__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ReselITInterface {
    return new Interface(_abi) as ReselITInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): ReselIT {
    return new Contract(address, _abi, runner) as unknown as ReselIT;
  }
}
